Vagrant.configure('2') do |config|
  config.vagrant.plugins = ['vagrant-env']
  config.env.enable

  config.vm.provider 'virtualbox' do |v|
    v.memory = 2048
    v.cpus = 2
  end

  config.vm.provision 'shell',
                      env: { 'CONTROL_NODE_IP' => ENV['CONTROL_NODE_IP'],
                             'CONTROL_NODE_HOSTNAME' => ENV['CONTROL_NODE_HOSTNAME'],
                             'K8S_VERSION' => ENV['K8S_VERSION'],
                             'WORKER_NODE' => ENV['WORKER_NODE'],
                             'WORKER_NODE_IP' => ENV['WORKER_NODE_IP'],
                             'WORKER_NODE_HOSTNAME' => ENV['WORKER_NODE_HOSTNAME'] },
                      path: 'scripts/startup.sh'

  config.vm.define 'control-node' do |control|
    control.vm.box = ENV['OS_IMAGE']
    control.vm.network :private_network, ip: ENV['CONTROL_NODE_IP']
    control.vm.hostname = ENV['CONTROL_NODE_HOSTNAME']
    control.vm.provision 'shell',
                         env: { 'CONTROL_NODE_IP' => ENV['CONTROL_NODE_IP'],
                                'K8S_VERSION' => ENV['K8S_VERSION'],
                                'K8S_POD_NET_CIDR' => ENV['K8S_POD_NET_CIDR'] },
                         path: 'scripts/control.sh'
  end

  (1..ENV['WORKER_NODE'].to_i).each do |i|
    config.vm.define "#{ENV['WORKER_NODE_HOSTNAME']}#{i}" do |node|
      node.vm.box = ENV['OS_IMAGE']
      node.vm.network :private_network, ip: "#{ENV['WORKER_NODE_IP']}#{i}"
      node.vm.hostname = "#{ENV['WORKER_NODE_HOSTNAME']}#{i}"
      node.vm.provision 'shell',
                        path: 'scripts/node.sh'
    end
  end
end
